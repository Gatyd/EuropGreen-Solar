# Generated by Django 5.0.14 on 2025-10-13 21:48

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeValidation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_validated', models.BooleanField(default=False)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Validation administrative',
                'verbose_name_plural': 'Validations administratives',
                'db_table': 'installations_administrative_validation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Commissioning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('handover_receipt_given', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mise en service',
                'verbose_name_plural': 'Mises en service',
                'db_table': 'installations_commissioning',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsuelVisit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('refusal_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Visite CONSUEL',
                'verbose_name_plural': 'Visites CONSUEL',
                'db_table': 'installations_consuel_visit',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnedisConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_validated', models.BooleanField(default=False)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Connexion ENEDIS',
                'verbose_name_plural': 'Connexions ENEDIS',
                'db_table': 'installations_enedis_connection',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_address', models.TextField()),
                ('installation_power', models.DecimalField(decimal_places=2, max_digits=5)),
                ('installation_type', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('technical_visit', 'Visite technique'), ('representation_mandate', 'Mandat représentation'), ('administrative_validation', 'Validation administrative'), ('installation_completed', 'Installation effectuée'), ('consuel_visit', 'Visite CONSUEL'), ('enedis_connection', 'Raccordement ENEDIS'), ('commissioning', 'Mise en service')], default='technical_visit', max_length=30)),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, help_text="Commission du collaborateur/client (apporteur d'affaires)", max_digits=12)),
                ('commission_paid', models.BooleanField(default=False, help_text='Indique si la commission du collaborateur/client a été payée')),
                ('sales_commission_amount', models.DecimalField(decimal_places=2, default=0, help_text='Commission du commercial (assigned_to)', max_digits=12)),
                ('sales_commission_paid', models.BooleanField(default=False, help_text='Indique si la commission du commercial a été payée')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Fiche d'installation",
                'verbose_name_plural': "Fiches d'installation",
                'db_table': 'installations_form',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InstallationCompleted',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('modules_installed', models.BooleanField(default=False)),
                ('inverters_installed', models.BooleanField(default=False)),
                ('dc_ac_box_installed', models.BooleanField(default=False)),
                ('battery_installed', models.BooleanField(default=False)),
                ('photo_modules', models.ImageField(blank=True, null=True, upload_to='installations/completed/modules/')),
                ('photo_inverter', models.ImageField(blank=True, null=True, upload_to='installations/completed/inverter/')),
                ('report_pdf', models.FileField(blank=True, null=True, upload_to='installations/completed/reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Installation terminée',
                'verbose_name_plural': 'Installations terminées',
                'db_table': 'installations_completed',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RepresentationMandate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_civility', models.CharField(blank=True, choices=[('mme', 'Madame'), ('mr', 'Monsieur')], max_length=5, null=True)),
                ('client_birth_date', models.DateField(blank=True, null=True)),
                ('client_birth_place', models.CharField(blank=True, max_length=255)),
                ('client_address', models.TextField(blank=True)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('company_rcs_city', models.CharField(blank=True, max_length=255)),
                ('company_siret', models.CharField(blank=True, max_length=20)),
                ('company_head_office_address', models.TextField(blank=True)),
                ('represented_by', models.CharField(blank=True, max_length=255)),
                ('representative_role', models.CharField(blank=True, max_length=255)),
                ('mandate_pdf', models.FileField(blank=True, null=True, upload_to='installations/representation_mandate/pdfs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mandat de représentation',
                'verbose_name_plural': 'Mandats de représentation',
                'db_table': 'installations_representation_mandate',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('signer_name', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('signed_at', models.DateTimeField(auto_now_add=True)),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='installations/signatures/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Signature',
                'verbose_name_plural': 'Signatures',
                'db_table': 'installations_signature',
            },
        ),
        migrations.CreateModel(
            name='TechnicalVisit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('visit_date', models.DateField()),
                ('expected_installation_date', models.DateField()),
                ('roof_type', models.CharField(blank=True, choices=[('tile', 'Tuile'), ('scale_tile', 'Tuile écaille'), ('slate', 'Ardoise'), ('steel', 'Bac acier'), ('fibrocement', 'Fibrociment'), ('flat_terrace', 'Toit terrasse')], max_length=20, null=True)),
                ('tiles_spare_provided', models.BooleanField(default=False)),
                ('roof_shape', models.CharField(blank=True, choices=[('one_slope', '1 pan'), ('multi_slope', 'Multipan'), ('flat', 'Toit plat terrasse')], max_length=20, null=True)),
                ('roof_access', models.CharField(blank=True, choices=[('R', 'R'), ('R1', 'R1'), ('R2', 'R2'), ('other', 'Autre')], max_length=10, null=True)),
                ('roof_access_other', models.CharField(blank=True, max_length=255)),
                ('truck_access', models.CharField(choices=[('yes', 'Oui'), ('no', 'Non'), ('unknown', 'Inconnu')], default='unknown', max_length=10)),
                ('truck_access_comment', models.TextField(blank=True)),
                ('nacelle_needed', models.CharField(choices=[('yes', 'Oui'), ('no', 'Non'), ('unknown', 'Inconnu')], default='unknown', max_length=10)),
                ('meter_type', models.CharField(blank=True, choices=[('linky', 'Linky'), ('other', 'Autre')], max_length=10, null=True)),
                ('meter_type_other', models.CharField(blank=True, max_length=255)),
                ('current_type', models.CharField(blank=True, choices=[('mono', 'Monophasé'), ('tri', 'Triphasé')], max_length=10, null=True)),
                ('existing_grid_connection', models.BooleanField(default=True)),
                ('meter_position', models.CharField(choices=[('indoor', 'Intérieur'), ('outdoor', 'Extérieur'), ('unknown', 'Inconnu')], default='unknown', max_length=10)),
                ('meter_location_photo', models.ImageField(blank=True, null=True, upload_to='installations/technical_visit/meters/')),
                ('panels_to_board_distance_m', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('additional_equipment_needed', models.BooleanField(default=False)),
                ('additional_equipment_details', models.TextField(blank=True, null=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('approval_statement', models.CharField(default='lu et approuvé', max_length=64)),
                ('report_pdf', models.FileField(blank=True, null=True, upload_to='installations/technical_visit/reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Visite technique',
                'verbose_name_plural': 'Visites techniques',
                'db_table': 'installations_technical_visit',
                'ordering': ['-visit_date'],
            },
        ),
    ]
